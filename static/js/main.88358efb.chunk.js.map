{"version":3,"sources":["firebase.js","Components/Post/index.jsx","Components/common/nameGenerator.js","Components/ImageUpload/index.jsx","Components/SignModal/index.jsx","Components/Header/index.jsx","Components/NoImage/index.jsx","Components/Preloader/index.jsx","Components/App/index.jsx","serviceWorker.js","index.js","img/loader.svg"],"names":["db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","storage","useStyles","makeStyles","deleteComment","color","fontSize","Post","postId","imageUrl","caption","username","user","imageName","uid","avatarURL","classes","useState","comments","setComments","comment","setComment","showIcon","setShowIcon","useEffect","unsubscribe","collection","doc","orderBy","onSnapshot","snapshot","docs","map","commentId","id","data","className","Avatar","alt","src","currentUser","IconButton","aria-label","onClick","fileName","delete","then","console","log","ref","catch","error","onMouseEnter","onMouseLeave","key","text","type","placeholder","value","onChange","e","target","disabled","event","preventDefault","add","displayName","timestamp","FieldValue","serverTimestamp","generateName","charset","retVal","i","n","length","charAt","Math","floor","random","StyledIconButton","withStyles","root","position","bottom","left","transform","StyledAddCircleIcon","AddCircleIcon","StyledSwipeableDrawer","paper","maxWidth","margin","SwipeableDrawer","theme","display","alignSelf","wrapper","spacing","buttonSuccess","backgroundColor","green","fabProgress","top","zIndex","buttonProgress","marginTop","marginLeft","customButton","captionInput","marginBottom","input","inputRoot","ImageUpload","image","setImage","setCaption","loading","setLoading","success","setSuccess","React","showMenu","setShowMenu","buttonClassname","clsx","toggleDrawer","open","aria-controls","aria-haspopup","anchor","onClose","onOpen","Input","name","Fab","put","on","alert","message","child","getDownloadURL","url","photoURL","CircularProgress","size","multiple","files","htmlFor","Button","variant","component","width","palette","background","border","boxShadow","shadows","padding","outline","deleteImage","SignModal","openSignIn","setOpen","setOpenSignIn","setUserDisplayName","setUsername","password","setPassword","email","setEmail","Modal","signInWithEmailAndPassword","createUserWithEmailAndPassword","authUser","updateProfile","Header","userDisplayName","loginProgress","signOut","StyledPanoramaOutlinedIcon","PanoramaOutlinedIcon","NoImage","Preloader","preloader","App","posts","setPosts","setUser","setLoginProgress","onAuthStateChanged","post","TransitionGroup","CSSTransition","classNames","timeout","enter","exit","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.88358efb.chunk.js","sourcesContent":["import firebase from \"firebase\"\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n    apiKey: \"AIzaSyAIrB3p2KXHrdECt2w5cNjIbFMTHVFFsgM\",\r\n    authDomain: \"my-image-wall.firebaseapp.com\",\r\n    databaseURL: \"https://my-image-wall.firebaseio.com\",\r\n    projectId: \"my-image-wall\",\r\n    storageBucket: \"my-image-wall.appspot.com\",\r\n    messagingSenderId: \"540912265746\",\r\n    appId: \"1:540912265746:web:a50d3f609ed791dbe786cb\",\r\n    measurementId: \"G-BVDKVYDK20\"\r\n})\r\n\r\nconst db = firebaseApp.firestore()\r\nconst auth = firebase.auth()\r\nconst storage = firebase.storage()\r\n\r\nexport {db, auth, storage}","import React, {useEffect, useState} from 'react'\r\nimport './index.scss'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport {db, auth, storage} from '../../firebase'\r\nimport firebase from 'firebase'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport ClearIcon from '@material-ui/icons/Clear'\r\nimport makeStyles from '@material-ui/core/styles/makeStyles'\r\n\r\nconst useStyles = makeStyles({\r\n    deleteComment: {\r\n        color: 'gray',\r\n        fontSize: '15px',\r\n        '&:hover': {\r\n            color: '#646464'\r\n        },\r\n        '&:active': {\r\n            color: '#888888'\r\n        }\r\n    },\r\n})\r\n\r\nfunction Post({postId, imageUrl, caption, username, user, imageName, uid, avatarURL}) {\r\n    const classes = useStyles()\r\n    const [comments, setComments] = useState([])\r\n    const [comment, setComment] = useState('')\r\n    const [showIcon, setShowIcon] = useState(false)\r\n\r\n    useEffect(() => {\r\n        let unsubscribe\r\n        if (postId) {\r\n            unsubscribe = db\r\n                .collection('posts')\r\n                .doc(postId)\r\n                .collection('comments')\r\n                .orderBy('timestamp', 'asc')\r\n                .onSnapshot(((snapshot) => {\r\n                    setComments(snapshot.docs.map((doc) => ({\r\n                            commentId: doc.id,\r\n                            data: doc.data()\r\n                        })\r\n                    ))\r\n                }))\r\n        }\r\n        return () => {\r\n            unsubscribe()\r\n        }\r\n    }, [postId])\r\n\r\n    const postComment = (event) => {\r\n        event.preventDefault()\r\n\r\n        db.collection('posts').doc(postId).collection('comments').add({\r\n            text: comment,\r\n            username: user.displayName,\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n            uid: auth.currentUser.uid,\r\n        })\r\n        setComment('')\r\n    }\r\n\r\n    const deleteComment = (postId, commentId) => {\r\n        db\r\n            .collection('posts')\r\n            .doc(postId).collection('comments')\r\n            .doc(commentId).delete()\r\n            .then(function () {\r\n                console.log('Document successfully deleted!')\r\n            }).catch(function (error) {\r\n            console.error('Error removing document: ', error)\r\n        })\r\n    }\r\n\r\n    const deletePost = (id, fileName) => {\r\n        db.collection('posts').doc(id).delete().then(function () {\r\n            console.log('Document successfully deleted!')\r\n            storage.ref(`image/${fileName}`).delete().then(function () {\r\n                console.log('File successfully deleted!')\r\n            }).catch(function (error) {\r\n                console.error('Error removing document: ', error)\r\n            });\r\n        }).catch(function (error) {\r\n            console.error('Error removing document: ', error)\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div className='post'>\r\n                <div className='post__header'>\r\n                    <div className='post__header__left'>\r\n                        <Avatar\r\n                            className='post__header__left__avatar'\r\n                            alt={username}\r\n                            src={avatarURL}\r\n                        />\r\n                        <div>{username}</div>\r\n                    </div>\r\n                    <div className='post__header__right'>\r\n                        {auth.currentUser?.uid === uid &&\r\n                            <IconButton aria-label='delete' onClick={() => deletePost(postId, imageName)}>\r\n                                <DeleteIcon/>\r\n                            </IconButton>}\r\n                    </div>\r\n                </div>\r\n                <div className='post__image'>\r\n                    <img src={imageUrl} alt=\"\"/>\r\n                </div>\r\n                <div className='post__text' onMouseEnter={() => setShowIcon(true)}\r\n                     onMouseLeave={() => setShowIcon(false)}>\r\n                    <div className='post__text__caption'>\r\n                        <div className='post__text__caption-userName'>\r\n                            {username}\r\n                        </div>\r\n                        <div className='post__text__caption-captionText'>\r\n                            {caption}\r\n                        </div>\r\n                    </div>\r\n                    {\r\n                        comments.map((comment) => (\r\n                            <div key={comment.commentId} className='post__text__comments'>\r\n                                <div className='post__text__comments__left'>\r\n                                    <div className='post__text__comments__left-userName'>\r\n                                        {comment.data.username}\r\n                                    </div>\r\n                                    <div className='post__text__comments__left-message'>\r\n                                        {comment.data.text}\r\n                                    </div>\r\n                                </div>\r\n                                <div className='post__text__comments__right'>\r\n                                    {comment.data.uid === auth.currentUser?.uid && showIcon &&\r\n                                        <button className='post__text__comments__right-button'\r\n                                                onClick={() => deleteComment(postId, comment.commentId)}>\r\n                                            <ClearIcon className={classes.deleteComment}/>\r\n                                        </button>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        ))\r\n                    }\r\n                </div>\r\n                {user &&\r\n                    <form className='post__commentBox'>\r\n                        <input\r\n                            className='post__commentBox__input'\r\n                            type='text'\r\n                            placeholder='Каментаваць...'\r\n                            value={comment}\r\n                            onChange={(e) => setComment(e.target.value)}\r\n                        />\r\n                        <button\r\n                            disabled={!comment}\r\n                            className='post__commentBox__button'\r\n                            type='submit'\r\n                            onClick={postComment}\r\n                        >\r\n                            Адправiць\r\n                        </button>\r\n                    </form>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post","export function generateName() {\r\n    let length = 8,\r\n        charset = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789',\r\n        retVal = '';\r\n    for (let i = 0, n = charset.length; i < length; ++i) {\r\n        retVal += charset.charAt(Math.floor(Math.random() * n));\r\n    }\r\n    return retVal;\r\n}","import React, {useState} from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport {db, storage, auth} from '../../firebase'\r\nimport firebase from 'firebase'\r\nimport './index.scss'\r\nimport clsx from 'clsx'\r\nimport {makeStyles, withStyles} from '@material-ui/core/styles'\r\nimport CircularProgress from '@material-ui/core/CircularProgress'\r\nimport {green} from '@material-ui/core/colors'\r\nimport Fab from '@material-ui/core/Fab'\r\nimport CheckIcon from '@material-ui/icons/Check'\r\nimport SaveIcon from '@material-ui/icons/Save'\r\nimport Input from '@material-ui/core/Input'\r\nimport {generateName} from '../common/nameGenerator'\r\nimport IconButton from \"@material-ui/core/IconButton\"\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle'\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer'\r\n\r\nconst StyledIconButton = withStyles({\r\n    root: {\r\n        position: 'fixed',\r\n        bottom: '15px',\r\n        left: '50%',\r\n        transform: 'translate(-50%, 0)'\r\n    }\r\n})(IconButton);\r\n\r\nconst StyledAddCircleIcon = withStyles({\r\n    root: {\r\n        fontSize: '4rem'\r\n    }\r\n})(AddCircleIcon);\r\n\r\nconst StyledSwipeableDrawer = withStyles({\r\n    paper: {\r\n        maxWidth: '600px',\r\n        margin: '0 auto'\r\n    }\r\n})(SwipeableDrawer);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        alignSelf: 'center',\r\n    },\r\n    wrapper: {\r\n        margin: theme.spacing(1),\r\n        position: 'relative',\r\n    },\r\n    buttonSuccess: {\r\n        backgroundColor: green[500],\r\n        '&:hover': {\r\n            backgroundColor: green[700],\r\n        },\r\n    },\r\n    fabProgress: {\r\n        color: green[500],\r\n        position: 'absolute',\r\n        top: -6,\r\n        left: -6,\r\n        zIndex: 1,\r\n    },\r\n    buttonProgress: {\r\n        color: green[500],\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    },\r\n    customButton: {\r\n        position: 'fixed',\r\n        bottom: '15px',\r\n        left: '50%',\r\n        transform: `translate(-50%, 0)`,\r\n        'svg': {\r\n            fontSize: '40px'\r\n        }\r\n    },\r\n    captionInput: {\r\n        marginBottom: '20px',\r\n    },\r\n    input: {\r\n        display: 'none',\r\n    },\r\n    inputRoot: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n        alignSelf: 'center'\r\n    },\r\n}));\r\n\r\nfunction ImageUpload() {\r\n    const classes = useStyles()\r\n    const [image, setImage] = useState(null)\r\n    const [caption, setCaption] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const [success, setSuccess] = useState(false)\r\n    const [showMenu, setShowMenu] = React.useState(false);\r\n\r\n    const buttonClassname = clsx({\r\n        [classes.buttonSuccess]: success,\r\n    })\r\n\r\n    const handleChange = (e) => {\r\n        if (e.target.files[0]) {\r\n            setImage(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    const toggleDrawer = (open, caption, image) => (event) => {\r\n        if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n            return\r\n        }\r\n        setShowMenu(open)\r\n        setCaption(caption)\r\n        setImage(image)\r\n    }\r\n\r\n    const handleUpload = () => {\r\n        const fileName = generateName()\r\n        const uploadTask = storage.ref(`image/${fileName}`).put(image)\r\n\r\n        uploadTask.on(\r\n            'state_changed',\r\n            () => {\r\n                setSuccess(false)\r\n                setLoading(true)\r\n            },\r\n            (error) => {\r\n                alert(error.message)\r\n            },\r\n            () => {\r\n                storage\r\n                    .ref('image')\r\n                    .child(fileName)\r\n                    .getDownloadURL()\r\n                    .then(url => {\r\n                        db.collection('posts').add({\r\n                            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n                            caption: caption,\r\n                            imageUrl: url,\r\n                            imageName: fileName,\r\n                            username: auth.currentUser.displayName,\r\n                            uid: auth.currentUser.uid,\r\n                            avatarURL: auth.currentUser.photoURL\r\n                        }).then(() => {\r\n                            setShowMenu(false)\r\n                            setLoading(false)\r\n                            setCaption('')\r\n                            setImage(null)\r\n                        })\r\n                    })\r\n            }\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <StyledIconButton\r\n                color='secondary'\r\n                aria-controls='customized-menu'\r\n                aria-haspopup='true'\r\n                onClick={toggleDrawer(true)}\r\n            >\r\n                <StyledAddCircleIcon/>\r\n            </StyledIconButton>\r\n            <StyledSwipeableDrawer\r\n                anchor='bottom'\r\n                open={showMenu}\r\n                onClose={toggleDrawer(false, '', null)}\r\n                onOpen={toggleDrawer(true)}\r\n            >\r\n                <div className='imageUpload'>\r\n                    <Input\r\n                        className={classes.captionInput}\r\n                        placeholder='Увядзi загаловак...'\r\n                        type='text'\r\n                        value={caption}\r\n                        onChange={(e) => setCaption(e.target.value)}\r\n                    />\r\n                    {image ?\r\n                        <>\r\n                            <div className='imageName'>{image.name}</div>\r\n                            <div className={classes.root}>\r\n                                <div className={classes.wrapper}>\r\n                                    <Fab\r\n                                        aria-label='save'\r\n                                        color='primary'\r\n                                        className={buttonClassname}\r\n                                        onClick={handleUpload}\r\n                                        disabled={!caption}\r\n                                    >\r\n                                        {success ? <CheckIcon/> : <SaveIcon/>}\r\n                                    </Fab>\r\n                                    {loading && <CircularProgress size={68} className={classes.fabProgress}/>}\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                        :\r\n                        <div className={classes.inputRoot}>\r\n                            <input\r\n                                className={classes.input}\r\n                                id='contained-button-file'\r\n                                multiple\r\n                                type='file'\r\n                                onChange={handleChange}\r\n                            />\r\n                            <label htmlFor={caption ? 'contained-button-file' : ''}>\r\n                                <Button variant='contained' color='primary' component='span' disabled={!caption}>\r\n                                    Выбраць файл\r\n                                </Button>\r\n                            </label>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </StyledSwipeableDrawer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ImageUpload","import React, {useState} from 'react'\r\nimport Modal from '@material-ui/core/Modal'\r\nimport Input from '@material-ui/core/Input'\r\nimport Button from '@material-ui/core/Button'\r\nimport {makeStyles} from '@material-ui/core/styles'\r\nimport {auth, storage} from '../../firebase'\r\nimport './index.scss'\r\nimport {generateName} from '../common/nameGenerator'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera'\r\nimport ClearIcon from '@material-ui/icons/Clear'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        position: 'absolute',\r\n        width: 315,\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '1px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n        top: `50%`,\r\n        left: `50%`,\r\n        transform: `translate(-50%, -50%)`,\r\n        outline: `none`\r\n    },\r\n    input: {\r\n        display: 'none',\r\n    },\r\n    deleteImage: {\r\n        color: 'gray',\r\n        fontSize: '15px',\r\n        '&:hover': {\r\n            color: '#646464'\r\n        },\r\n        '&:active': {\r\n            color: '#888888'\r\n        }\r\n    },\r\n}))\r\n\r\nfunction SignModal({open, openSignIn, setOpen, setOpenSignIn, setUserDisplayName}) {\r\n\r\n    const classes = useStyles();\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [image, setImage] = useState(null)\r\n\r\n    const signUp = (e) => {\r\n        e.preventDefault()\r\n\r\n        auth.createUserWithEmailAndPassword(email, password)\r\n            .then((authUser) => {\r\n                if (image) {\r\n                    const fileName = generateName()\r\n                    const uploadTask = storage.ref(`avatars/${fileName}`).put(image)\r\n                    uploadTask.on(\r\n                        'state_changed',\r\n                        () => {\r\n                        },\r\n                        (error) => {\r\n                            alert(error.message)\r\n                        },\r\n                        () => {\r\n                            storage\r\n                                .ref('avatars')\r\n                                .child(fileName)\r\n                                .getDownloadURL()\r\n                                .then(url => {\r\n                                    return authUser.user.updateProfile({\r\n                                        photoURL: url\r\n                                    })\r\n                                })\r\n                        }\r\n                    )\r\n                }\r\n                authUser.user.updateProfile({\r\n                    displayName: username\r\n                }).then(() => {\r\n                    setUserDisplayName(username)\r\n                    setImage(null)\r\n                    setOpen(false)\r\n                })\r\n            })\r\n            .catch((error) => alert(error.message))\r\n    }\r\n\r\n    const signIn = (e) => {\r\n        e.preventDefault()\r\n\r\n        auth.signInWithEmailAndPassword(email, password)\r\n            .catch((error) => alert(error.message))\r\n        setOpenSignIn(false)\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        if (e.target.files[0]) {\r\n            setImage(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                open={openSignIn}\r\n                onClose={() => setOpenSignIn(false)}\r\n            >\r\n                <div className={classes.paper}>\r\n                    <form className='modal__sign'>\r\n                        <div className='modal-logo'>\r\n                            Фотакарткi\r\n                        </div>\r\n                        <Input\r\n                            placeholder='E-mail'\r\n                            type='text'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        />\r\n                        <Input\r\n                            placeholder='Password'\r\n                            type='password'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        />\r\n                        <Button type='submit' onClick={signIn}>Увайсцi</Button>\r\n                    </form>\r\n                </div>\r\n            </Modal>\r\n\r\n            <Modal\r\n                open={open}\r\n                onClose={() => {\r\n                    setOpen(false)\r\n                    setImage(null)\r\n                }}\r\n            >\r\n                <div className={classes.paper}>\r\n                    <form className='modal__sign'>\r\n                        <div className='modal-logo'>\r\n                            Фотакарткi\r\n                        </div>\r\n                        <Input\r\n                            placeholder='Username'\r\n                            type='text'\r\n                            value={username}\r\n                            onChange={(e) => setUsername(e.target.value)}\r\n                        />\r\n                        <Input\r\n                            placeholder='E-mail'\r\n                            type='text'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        />\r\n                        <Input\r\n                            placeholder='Password'\r\n                            type='password'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        />\r\n                        <div className='uploadAvatarForm'>\r\n                            <span>Аватар:</span>\r\n                            {image ?\r\n                                <div className='uploadAvatarForm__nameButton'>\r\n                                    <span className='uploadAvatarForm__nameButton__imageName'>{image.name}</span>\r\n                                    <button className='uploadAvatarForm__nameButton__deleteImageButton'\r\n                                            onClick={() => {\r\n                                                setImage(null)\r\n                                            }}>\r\n                                        <ClearIcon className={classes.deleteImage}/>\r\n                                    </button>\r\n                                </div>\r\n                                :\r\n                                <div className='uploadAvatarForm__button'>\r\n                                    <input className={classes.input} id='icon-button-file' type='file'\r\n                                           onChange={handleChange}/>\r\n                                    <label htmlFor='icon-button-file'>\r\n                                        <IconButton color='secondary' aria-label='upload picture' component='span'>\r\n                                            <PhotoCamera/>\r\n                                        </IconButton>\r\n                                    </label>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                        <Button type='submit' onClick={signUp}>Зарэгiстравацца</Button>\r\n                    </form>\r\n                </div>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SignModal","import React from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport {auth} from '../../firebase'\r\nimport './index.scss'\r\n\r\nfunction Header({user, setOpenSignIn, setOpen, userDisplayName, loginProgress}) {\r\n    return (\r\n        <div className='header'>\r\n            <div className='container'>\r\n                <div className='header__content'>\r\n                    <div className='header__content__logo'>\r\n                        Фотакарткi<span\r\n                        className='header__content__logo-userName'>\r\n                        {user && !loginProgress ? `@${userDisplayName || user.displayName}` :\r\n                            !loginProgress && !user && '@не залагінен'}\r\n                    </span>\r\n                    </div>\r\n                    {user && !loginProgress ?\r\n                        <div className='header__content__buttons-signOut'>\r\n                            <Button onClick={() => auth.signOut()}>Выйсцi</Button>\r\n                        </div>\r\n                        : !loginProgress && !user &&\r\n                        <div className='header__content__buttons-signInOut'>\r\n                            <Button onClick={() => setOpenSignIn(true)}>Уваход</Button>\r\n                            <Button onClick={() => setOpen(true)}>Новы</Button>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport PanoramaOutlinedIcon from '@material-ui/icons/PanoramaOutlined'\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport './index.scss'\r\n\r\nconst StyledPanoramaOutlinedIcon = withStyles({\r\n    root: {\r\n        color: 'lightgray',\r\n        fontSize: '20rem'\r\n    }\r\n})(PanoramaOutlinedIcon);\r\n\r\nconst NoImage = () => {\r\n\r\n    return (\r\n        <div className='noImage-container'>\r\n            <StyledPanoramaOutlinedIcon/>\r\n            <div className='noImage-container__text'>Няма фатаграфiй :(</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NoImage;","import React from 'react'\r\nimport preloader from '../../img/loader.svg'\r\nimport './preloader.scss'\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div className='preloader'>\r\n            <img src={preloader} alt='preloader'/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader","import React, {useEffect, useState} from 'react'\r\nimport './index.scss'\r\nimport Post from '../Post'\r\nimport {db, auth} from '../../firebase'\r\nimport ImageUpload from '../ImageUpload'\r\nimport {TransitionGroup} from 'react-transition-group'\r\nimport CSSTransition from 'react-transition-group/CSSTransition'\r\nimport SignModal from '../SignModal'\r\nimport Header from '../Header'\r\nimport NoImage from '../NoImage'\r\nimport Preloader from '../Preloader';\r\n\r\nfunction App() {\r\n    const [posts, setPosts] = useState([])\r\n    const [open, setOpen] = useState(false)\r\n    const [openSignIn, setOpenSignIn] = useState(false)\r\n    const [user, setUser] = useState(null)\r\n    const [userDisplayName, setUserDisplayName] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const [loginProgress, setLoginProgress] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setLoginProgress(true)\r\n        const unsubscribe = auth.onAuthStateChanged((authUser) => {\r\n            if (authUser) {\r\n                setUser(authUser)\r\n                setLoginProgress(false)\r\n            } else {\r\n                setUser(null)\r\n                setLoginProgress(false)\r\n            }\r\n        })\r\n        return () => {\r\n            unsubscribe()\r\n        }\r\n    }, [user])\r\n\r\n    useEffect(() => {\r\n        setLoading(true)\r\n        db\r\n            .collection('posts')\r\n            .orderBy('timestamp', 'desc')\r\n            .onSnapshot(snapshot => {\r\n                setPosts(snapshot.docs.map(doc => ({\r\n                    id: doc.id,\r\n                    post: doc.data()\r\n                })))\r\n                setLoading(false)\r\n            })\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <div className='image-wall'>\r\n                <Header\r\n                    loginProgress={loginProgress}\r\n                    user={user}\r\n                    setOpenSignIn={setOpenSignIn}\r\n                    setOpen={setOpen}\r\n                    userDisplayName={userDisplayName}\r\n                />\r\n                {!posts.length && !loading ? <NoImage/> :\r\n                    loading ? <Preloader/> :\r\n                        <TransitionGroup>\r\n                            {posts.map(({id, post}) => (\r\n                                <CSSTransition\r\n                                    key={id}\r\n                                    classNames='postEffect'\r\n                                    timeout={{enter: 800, exit: 300}}\r\n                                >\r\n                                    <Post postId={id}\r\n                                          avatarURL={post.avatarURL}\r\n                                          imageName={post.imageName}\r\n                                          user={user}\r\n                                          uid={post.uid}\r\n                                          username={post.username}\r\n                                          caption={post.caption}\r\n                                          imageUrl={post.imageUrl}/>\r\n                                </CSSTransition>\r\n                            ))}\r\n                        </TransitionGroup>\r\n                }\r\n                <SignModal\r\n                    setUserDisplayName={setUserDisplayName}\r\n                    setUser={setUser}\r\n                    open={open}\r\n                    openSignIn={openSignIn}\r\n                    setOpen={setOpen}\r\n                    setOpenSignIn={setOpenSignIn}\r\n                />\r\n                {user ? <ImageUpload/> : ''}\r\n            </div>\r\n            <div className='footer'>Фотакарткi by @bamboleylo</div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './Components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/loader.f1e99469.svg\";"],"sourceRoot":""}